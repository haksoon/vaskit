<script type="text/template" id="askResultTemplate">
  <span class="left_vote_count">{{= left_count }}</span>
  <div class="vote_graph left">
    {{ for(var i=0; i < 10; i++) { }}
      <span class="circle left {{= i < (left_count / total_count) * 10 ? 'on' : '' }}"></span>
    {{ } }}
  </div>
  <span class="vote_type">{{= type }}</span>
  <div class="vote_graph right">
    {{ for(var i=0; i < 10; i++) { }}
      <span class="circle right {{= i < (right_count / total_count) * 10 ? 'on' : '' }}"></span>
    {{ } }}
  </div>
  <span class="right_vote_count">{{= right_count }}</span>
</script>

<script>
  var askResultTemplate = _.template($('#askResultTemplate').html());

  function vs_init(target) {
    var mouseTarget, mouseStartX, mouseStartY, mouseEndX, mouseEndY; // Mouse/Touch event target
    var ask_box = target.parentsUntil(this, '.ask'),
        ask_image_box = ask_box.find('.ask_image_box'),
        left_img = ask_box.find('.ask_image.left'),
        right_img = ask_box.find('.ask_image.right'),
        vs_result = ask_box.find('.vs_result'),
        vs_result_detail = ask_box.find('.vs_result_detail'),
        vs_result_detail_btn = ask_box.find('.vs_result_detail_btn');
    var ask_id = Number(ask_box.attr('ask-id')),
        ask_image_box_top,
        ask_image_box_left,
        ask_image_box_width,
        vs_delta = 10;


    target.removeAttr('onanimationstart onmouseover').each(function() {
      $(this).off('click', clickListener).on('click', clickListener);
      $(this).off('mousedown', mouseDownListener).on('mousedown', mouseDownListener);
      $(this).off('touchstart', touchStartListener).on('touchstart', touchStartListener);
      $(this).off('touchmove', touchMoveListener).on('touchmove', touchMoveListener);
      $(this).off('touchend', touchEndListener).on('touchend', touchEndListener);
    });


    function clickListener(e) {
      e.preventDefault();
      e.stopPropagation();
    }

    function mouseDownListener(e){
      e.preventDefault();
      // e.stopPropagation();
      mouseTarget = $(e.currentTarget);
      mouseStartX = mouseEndX = e.pageX;
      mouseStartY = mouseEndY = e.pageY;

      // unbind and bind mouse events to prevent repeated binding
      $(document).unbind('mousemove', mouseMoveListener);
      $(document).unbind('mouseup', mouseUpListener);
      $(document).bind('mousemove', mouseMoveListener);
      $(document).bind('mouseup', mouseUpListener);
      // unbind touch events
      mouseTarget.unbind('touchstart', touchStartListener);
      mouseTarget.unbind('touchmove', touchMoveListener);
      mouseTarget.unbind('touchend', touchEndListener);

      // Custom Code
      start(e);
    }

    function mouseMoveListener(e){
      e.preventDefault();
      mouseEndX = e.pageX;
      mouseEndY = e.pageY;

      // Custom Code
      moving(e);
    }

    function mouseUpListener(e){
      e.preventDefault();

      // unbind mouse events
      $(document).unbind('mousemove', mouseMoveListener);
      $(document).unbind('mouseup', mouseUpListener);
      // bind touch events
      mouseTarget.bind('touchstart', touchStartListener);
      mouseTarget.bind('touchmove', touchMoveListener);
      mouseTarget.bind('touchend', touchEndListener);

      // Custom Code
      end(e);
    }

    function touchStartListener(e){
      e.preventDefault();
      mouseTarget = $(e.currentTarget);
      mouseStartX = mouseEndX = e.originalEvent.touches[0].clientX;
      mouseStartY = mouseEndY = e.originalEvent.touches[0].clientY;

      // unbind mouse events to prevent repeated binding
      mouseTarget.unbind('mousedown', mouseDownListener);

      // Custom Code
      start(e);
    }

    function touchMoveListener(e){
      e.preventDefault();
      e.stopPropagation();

      mouseEndX = e.originalEvent.touches[0].clientX;
      mouseEndY = e.originalEvent.touches[0].clientY;

      // Custom Code
      moving(e);
    }

    function touchEndListener(e){
      e.preventDefault();

      // Custom Code
      end(e);
    }


    function start(e) {
      var vote_direction = target.attr('vote-direction');

      if (vote_direction == 'left') {
        left_img.css({ left: '10vw' });
        right_img.css({ right: '-10vw' });
      } else if (vote_direction == 'right') {
        left_img.css({ left: '-10vw' });
        right_img.css({ right: '10vw' });
      }

      ask_image_box_top = ask_image_box.offset().top;
      ask_image_box_left = ask_image_box.offset().left;
      ask_image_box_width = ask_box.width();
      ask_box.removeClass('is_voted').addClass('is_voting');
      vs_result_detail.removeClass('is_opened');
      vs_result_detail_btn.removeClass('is_opened');
      target.removeClass('left right').css({
        top: mouseStartY - ask_image_box_top,
        left: mouseStartX - ask_image_box_left
      });
    }

    function moving(e) {
      target.clearQueue().css({
        top: mouseEndY - ask_image_box_top,
        left: mouseEndX - ask_image_box_left
      });
      if (mouseEndX - ask_image_box_left < (ask_image_box_width / 2) - vs_delta) {
        left_img.clearQueue().css({ left: '10vw' });
        right_img.clearQueue().css({ right: '-10vw' });
      } else if (mouseEndX - ask_image_box_left > (ask_image_box_width / 2) + vs_delta) {
        left_img.clearQueue().css({ left: '-10vw' });
        right_img.clearQueue().css({ right: '10vw' });
      } else {
        left_img.clearQueue().css({ left: '-3vw' });
        right_img.clearQueue().css({ right: '-3vw' });
      }
    }

    function end(e) {
      ask_box.removeClass('is_voting');
      left_img.clearQueue().css({ left: 0 });
      right_img.clearQueue().css({ right: 0 });

      var vote_id = Number(target.attr('vote-id'));
      var vote_direction = target.attr('vote-direction');

      if (mouseEndX - ask_image_box_left < (ask_image_box_width / 2) - vs_delta) {
        if (vote_direction != 'left') {
          vote(target, ask_id, true);
        } else {
          ask_box.addClass('is_voted');
        }
        target.addClass('left').clearQueue().stop().animate({
          top: '50%',
          left: '25%'
        }, 250, 'easeOutBack');
      } else if (mouseEndX - ask_image_box_left > (ask_image_box_width / 2) + vs_delta) {
        if (vote_direction != 'right') {
          vote(target, ask_id, false);
        } else {
          ask_box.addClass('is_voted');
        }
        target.addClass('right').clearQueue().stop().animate({
          top: '50%',
          left: '75%'
        }, 250, 'easeOutBack');
      } else {
        if (vote_id) {
          vote_cancel(target, ask_id, vote_id);
        } else {
          ask_box.removeClass('is_voted');
        }
        target.removeClass('left right').clearQueue().stop().animate({
          top: '50%',
          left: '50%'
        }, 250, 'easeInOutBack');
      }
    }

  }

  function vote(target, ask_id, is_left) {
    var vote_id;
    var all_ask_box = $('.ask.ask_' + ask_id);
    var all_vs_btns = all_ask_box.find('.vs_btn');
    var all_vs_results = all_ask_box.find('.vs_result');
    var all_comment_toggles = all_ask_box.find('.comment_input_menu');
    if (current_user) {
      $.ajax({
              url: '/votes.json',
              dataType: 'json',
              type: 'POST',
              data: { ask_id: ask_id, is_left: is_left },
              error: function() {
                notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
              },
              success: function(data) {
                all_ask_box.addClass('is_voted');
                var left_vote_count = data.ask.left_ask_deal.vote_count;
                var right_vote_count = data.ask.right_ask_deal.vote_count;
                if (is_left) {
                  all_vs_results.html(askResultTemplate({ type: '전체', left_count: left_vote_count, right_count: right_vote_count, total_count: left_vote_count + right_vote_count }))
                                .find('.vote_graph.left').find('.on');
                  all_vs_btns.attr('vote-id', data.vote.id)
                             .attr('vote-direction', 'left')
                             .removeClass('right').addClass('left').clearQueue().stop().css({
                               top: '50%',
                               left: '25%'
                             });
                  all_comment_toggles.attr('left', true).removeClass('right').addClass('left');
                } else {
                  all_vs_results.html(askResultTemplate({ type: '전체', left_count: left_vote_count, right_count: right_vote_count, total_count: left_vote_count + right_vote_count }))
                                .find('.vote_graph.right').find('.on');
                  all_vs_btns.attr('vote-id', data.vote.id)
                             .attr('vote-direction', 'right')
                             .removeClass('left').addClass('right').clearQueue().stop().css({
                               top: '50%',
                               left: '75%'
                             });
                  all_comment_toggles.removeAttr('left').removeClass('left').addClass('right');
                }
              },
              beforeSend: function() {
              },
              complete: function() {
              }
      });
    } else {
      var votes = $.cookie('visitor_votes');
      var votes_array = (votes === null || votes === '') ? [] : votes.split('.');

      vote_id = votes_array.length === 0 ? 0 : JSON.parse(votes_array[votes_array.length-1]).id + 1;
      for (var i=0; i<votes_array.length; i++) {
        var vote = votes_array[i];
        vote = JSON.parse(vote);
        if (vote.ask_id == ask_id) votes_array.splice(i, 1);
      }
      var this_vote = JSON.stringify({
        id: vote_id,
        ask_id: ask_id,
        is_left: is_left
      });
      votes_array.push(this_vote);
      votes = votes_array.join('.');
      $.cookie('visitor_votes', votes, { expires : 30000, path : '/' });

      all_ask_box.addClass('is_voted');
      if (is_left) {
        all_vs_btns.attr('vote-id', vote_id)
                    .attr('vote-direction', 'left')
                    .removeClass('right').addClass('left').clearQueue().stop().css({
                      top: '50%',
                      left: '25%'
                    });
      } else {
        all_vs_btns.attr('vote-id', vote_id)
                    .attr('vote-direction', 'right')
                    .removeClass('left').addClass('right').clearQueue().stop().css({
                      top: '50%',
                      left: '75%'
                    });
      }

      if (votes_array.length > 4) {
        visitor_check();
        ga('send', 'event', '랜딩페이지', '랜딩페이지 진입', '비회원 투표 5개 초과', 1);
      }
    }
  }


  function vote_cancel(target, ask_id, vote_id) {
    var all_ask_box = $('.ask.ask_' + ask_id);
    var all_vs_btns = all_ask_box.find('.vs_btn');
    if (current_user) {
      $.ajax({
              url: '/votes/' + vote_id + '.json',
              dataType: 'json',
              type: 'DELETE',
              error: function() {
                notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
              },
              success: function(data) {
                all_ask_box.removeClass('is_voted');
                all_vs_btns.removeAttr('vote-id')
                           .removeAttr('vote-direction')
                           .removeClass('left right').clearQueue().stop().css({
                             top: '50%',
                             left: '50%'
                           });
              },
              beforeSend: function() {
                loadingStart();
              },
              complete: function() {
                loadingEnd();
              }
      });
    } else {
      var votes = $.cookie('visitor_votes');
      var votes_array = (votes === null || votes === '') ? [] : votes.split('.');
      for (var i=0; i<votes_array.length; i++) {
        var vote = votes_array[i];
        vote = JSON.parse(vote);
        if (vote.id == vote_id) votes_array.splice(i, 1);
      }

      votes = votes_array.join('.');
      $.cookie('visitor_votes', votes, { expires : 30000, path : '/' });

      all_ask_box.removeClass('is_voted');
      all_vs_btns.removeAttr('vote-id')
                 .removeAttr('vote-direction')
                 .removeClass('left right').clearQueue().stop().css({
                   top: '50%',
                   left: '50%'
                 });
    }
  }
</script>
