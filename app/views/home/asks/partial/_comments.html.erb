<script type="text/template" id="commentsTemplate">
  {{ var show_comments = $.grep(comments, function(obj) { return obj.is_deleted === false }) }}
  {{ if (show_comments.length == 0) { }}
    <li class="comment_blank" onclick="comment_input_activate('new');">첫 댓글을 달아주세요!</li>
  {{ } else { }}
    <li class="comment_blank" onclick="comment_input_activate('new');" style="display: none;">첫 댓글을 달아주세요!</li>
    {{ var original_comments = $.grep(comments, function(obj) { return obj.comment_id === null }) }}
    {{ var end_line_check = true }}
    {{ for (var i=0; i < original_comments.length; i++) { }}
      {{ var original_comment = original_comments[i] }}
      {{ if (end_line_check && ask.be_completed && original_comment.created_at > ask.ask_complete.created_at) { }}
        <li class="comment_box end_line"><i class="fa fa-caret-down"></i>여기서부터는 투표를 종료하신 이후에 작성된 댓글입니다</li>
        {{ end_line_check = false }}
      {{ } }}
      {{ var reply_comments = $.grep(comments, function(obj) { return (obj.comment_id === original_comment.id && obj.is_deleted === false) }) }}
      {{ var already_like = $.grep(like_comments, function(obj) { return obj.comment_id === original_comment.id}).length === 0 ? false : true }}
      {{ if (original_comment.is_deleted == false || (original_comment.is_deleted && reply_comments.length > 0)) { }}
        {{= commentTemplate({ask: ask, comment: original_comment, already_like: already_like}) }}
        {{ for (var j=0; j < reply_comments.length; j++) { }}
          {{ var reply_comment = reply_comments[j] }}
          {{ var already_like = $.grep(like_comments, function(obj) { return obj.comment_id === reply_comment.id}).length === 0 ? false : true }}
          {{= commentTemplate({ask: ask, comment: reply_comment, already_like: already_like}) }}
        {{ } }}
      {{ } }}
    {{ } }}
  {{ } }}
</script>

<script type="text/template" id="commentTemplate">
  {{ var direction = ask.left_ask_deal_id == comment.ask_deal_id ? 'left' : 'right' }}
  {{ var gender = comment.user.gender ? 'male' : 'female' }}
  {{ var reply = comment.comment_id == null ? 'original' : 'reply' }}
  <li class="comment_box {{= comment.id }} {{= direction }} {{= reply }} {{= comment.is_deleted ? 'deleted' : '' }} {{= comment.user.id == 1 ? 'vaskit' : '' }} clearfix animated bounceIn" onclick="open_comment_menu($(this));" comment-id="{{= comment.id }}" original-comment-id="{{= reply == 'reply' ? comment.comment_id : comment.id }}" comment-user-id="{{= comment.user.id }}" is-deleted="{{= comment.is_deleted ? 'true' : '' }}" onanimationend="$(this).removeClass('animated bounceIn');">
    {{ if (reply == "reply") { }}
      <i class="fa fa-reply comment_reply_icon"></i>
    {{ } }}
    <img class="comment_user_pic" src="{{= get_avatar(comment.user) }}">
    <div class="comment_user">
      {{ if (comment.user.id == 1) { }}
        <span class="comment_user_id label vaskit">VASKIT</span>
      {{ } else if (current_user && comment.user.id == current_user.id) { }}
        <span class="comment_user_profile label me">ME</span>
        <span class="comment_user_id">{{=comment.user.string_id}}</span>
      {{ } else if (comment.user.id == ask.user_id) { }}
        <span class="comment_user_profile label asker">ASKER</span>
        <span class="comment_user_id">{{=comment.user.string_id}}</span>
      {{ } else { }}
        <span class="comment_user_profile {{= gender }}">{{=get_user_ages(comment.user.birthday)}}</span>
        <span class="comment_user_id">{{=comment.user.string_id}}</span>
      {{ } }}
      <div class="comment_menu_btn">
        <span class="comment_like_count">{{= comment.like_count == 0 ? "" :numberWithCommas(comment.like_count) }}</span>
        <i class="fa {{= already_like ? 'fa-heart' : 'fa-heart-o'}} comment_like_icon"></i>
      </div>
    </div>
    <div class="comment_bubble">
      <div class="comment_bubble_arrow"></div>
      <div class="comment_content">
        {{ if (comment.is_deleted) { }}
          삭제된 댓글입니다
        {{ } else { }}
          {{ if (comment.image_file_name !== null) { }}
            <a class="link_img" onclick="return false;">
              <img src="{{= get_image_url(comment, 'comments', 'original') }}" alt="" onerror="imgError(this);">
            </a>
          {{ } }}
          {{= taggingKeywords(comment.content) }}
        {{ } }}
      </div>
      <div class="comment_date">{{= get_past_time(comment.updated_at) }}</div>
    </div>
    <div class="comment_likes">
      {{ if (comment.comment_likes && comment.comment_likes.length > 0) { }}
        {{= commentLikeTemplate({recent_user: comment.comment_likes[comment.comment_likes.length-1].user.string_id, comment_like_count: comment.comment_likes.length}) }}
      {{ } }}
    </div>
  </li>
</script>

<script type="text/template" id="commentLikeTemplate">
  {{ if (recent_user !== null) { }}
    <div class="animated slideInUp">
      {{ if (comment_like_count == 1) { }}
        <i class="fa fa-heart animated tada"></i> <span>{{= recent_user }}님</span>이 이 댓글을 좋아합니다
      {{ } else { }}
        <i class="fa fa-heart animated tada"></i> <span>{{= recent_user }}님</span> 외 <span>{{= comment_like_count - 1 }}명</span>이 이 댓글을 좋아합니다
      {{ } }}
    </div>
  {{ } }}
</script>

<script type="text/template" id="commentWritingSignTemplate">
  {{ var direction = is_left ? "left" : "right" }}
  {{ var reply = is_reply ? "reply" : "" }}
  <li class="comment_box is_writing {{= direction }} {{= reply }} clearfix" onclick="cancle_comment_writing();">
    {{ if (is_reply) { }}
      <i class="fa fa-reply comment_reply_icon"></i>
    {{ } }}
    <div class="comment_writing_sign">
      <span class="comment_writing_pic" style="background-image: url('{{= get_avatar(current_user) }}');"></span>
      <span class="comment_writing_arrow"></span>
      <span class="comment_writing_user_id">{{= current_user ? current_user.string_id : '' }}</span>
      <span class="comment_writing_label">{{= label }}</span>
      <span class="comment_writing_cancle">&times; 취소</span>
    </div>
  </li>
</script>

<script>
  var commentsTemplate = _.template($("#commentsTemplate").html());
  var commentTemplate = _.template($("#commentTemplate").html());
  var commentLikeTemplate = _.template($("#commentLikeTemplate").html());
  var commentWritingSignTemplate = _.template($("#commentWritingSignTemplate").html());

  function new_comment() {
    var current_wrapper = $("#main_view").find(".seg.on").find(".wrapper").last();
    var current_comment_container = current_wrapper.find(".container.bottom");
    var current_comment_input_init = current_comment_container.find(".comment_input_init");
    var current_comment_input = current_comment_container.find(".comment_input");

    current_comment_input.val("");
    current_comment_input_init.removeAttr("onclick").off("click").on("click", function(){ comment_input_activate('new'); }).click();
  }

  function reply_comment(comment_id) {
    var current_wrapper = $("#main_view").find(".seg.on").find(".wrapper").last();
    var current_comment_container = current_wrapper.find(".container.bottom");
    var current_comment_input_init = current_comment_container.find(".comment_input_init");
    var current_comment_input = current_comment_container.find(".comment_input");

    history.back();
    current_comment_input.val("");
    current_comment_input_init.removeAttr("onclick").off("click").on("click", function(){ comment_input_activate('reply', comment_id); }).click();
  }

  function edit_comment(comment_id) {
    var current_wrapper = $("#main_view").find(".seg.on").find(".wrapper").last();
    var current_comment_container = current_wrapper.find(".container.bottom");
    var current_comment_input_init = current_comment_container.find(".comment_input_init");
    var current_comment_input = current_comment_container.find(".comment_input");

    var current_comment_box = current_wrapper.find(".comment_box."+comment_id).last();
    var current_comment_html = current_comment_box.find(".comment_content").html().trim().replace(new RegExp('<br>', 'g'), '\n');
    var current_comment_content = $(document.createElement('div')).html(current_comment_html).text();

    history.back();
    current_comment_input.val(current_comment_content);
    current_comment_input_init.removeAttr("onclick").off("click").on("click", function(){ comment_input_activate('edit', comment_id); }).click();
  }

  function cancle_comment_writing() {
    var current_wrapper = $("#main_view").find(".seg.on").find(".wrapper").last();
    var current_comment_container = current_wrapper.find(".container.bottom");
    var current_comment_input_init = current_comment_container.find(".comment_input_init");
    var hashtag_highlights = current_comment_container.find(".hashtag_highlights");
    var current_comment_input = current_comment_container.find(".comment_input");
    var current_comment_lists = current_wrapper.find(".comment_list");
    var is_writing_box = current_wrapper.find(".comment_box.is_writing");
    var current_comment_input_submit = current_comment_container.find(".comment_input_submit");
    var current_comment_input_submit_btn_text = current_comment_input_submit.find(".submit_btn_text");

    current_comment_lists.find(".comment_box:hidden").show();
    is_writing_box.remove();
    hashtag_highlights.html("");
    current_comment_input.val("").removeClass("filled");
    current_comment_input_init.removeAttr("onclick").off("click").on("click", function(){ comment_input_activate('new'); });
    current_comment_input_submit.removeClass("ready").off("click");
    current_comment_input_submit_btn_text.html("전송");
  }

  function comment_input_activate(comment_type, comment_id) {
    var current_wrapper = $("#main_view").find(".seg.on").find(".wrapper").last();
    var current_ask_container = current_wrapper.find(".container.main");
    var ask_box = current_ask_container.find(".ask");
    var ask_id = Number(ask_box.attr("ask-id"));
    var ask_user_id = Number(ask_box.attr("ask-user-id"));
    var current_comment_container = current_wrapper.find(".container.bottom");
    var current_comment_input_init = current_comment_container.find(".comment_input_init");
    var current_comment_input = current_comment_container.find(".comment_input");
    var current_comment_input_menu = current_comment_container.find(".comment_input_menu");
    var current_comment_input_counter = current_comment_container.find(".comment_input_counter");
    var current_comment_input_submit = current_comment_container.find(".comment_input_submit");
    var current_comment_input_submit_btn_text = current_comment_input_submit.find(".submit_btn_text");
    var current_comment_lists = current_wrapper.find(".comment_list");
    var ask_comment_count = parseInt(current_ask_container.find(".ask_comment_count").html());
    var is_vote = ask_box.hasClass("is_voted");
    var is_writing_box = current_wrapper.find(".comment_box.is_writing");
    var is_writing = is_writing_box.length > 0;

    if (!is_vote) {
      notify("먼저 투표에 참여해주세요!");
      current_ask_container.scroll_to(0);
    } else {
      visitor_check(function(){
        scroll_init(comment_type, comment_id);
        bubble_init(comment_type, comment_id);
        toggle_init(comment_type, comment_id);
        send_init(comment_type, comment_id);
        input_init(comment_type, comment_id);
      });
    }

    function scroll_init(comment_type, comment_id) {
      setTimeout(function(){
        var st_now, target_comment_box, target_comment_box_top, target_comment_box_height, st_destination;
        if (comment_type == "new") {
          // current_ask_container.scroll_to(true);
          st_now = current_ask_container.scrollTop() - current_ask_container.offset().top;
          target_comment_box = current_ask_container.find(".comment_box").last();
          target_comment_box_top = target_comment_box.offset().top;
          target_comment_box_height = target_comment_box.height();
          st_destination = st_now + target_comment_box_top + target_comment_box_height - 35;
          current_ask_container.scroll_to(st_destination);
        } else if (comment_type == "edit") {
          st_now = current_ask_container.scrollTop() - current_ask_container.offset().top;
          target_comment_box = current_ask_container.find(".comment_box."+comment_id).last();
          target_comment_box_top = target_comment_box.offset().top;
          target_comment_box_top = target_comment_box_top === 0 ? target_comment_box.next().offset().top : target_comment_box_top;
          st_destination = st_now + target_comment_box_top - 10;
          current_ask_container.scroll_to(st_destination);
        } else if(comment_type == "reply") {
          st_now = current_ask_container.scrollTop() - current_ask_container.offset().top;
          target_comment_box = current_ask_container.find(".comment_box."+comment_id).last();
          while (true) {
            if (target_comment_box.next().hasClass("reply")) {
              target_comment_box = target_comment_box.next();
            } else {
              break;
            }
          }
          target_comment_box_top = target_comment_box.offset().top;
          target_comment_box_height = target_comment_box.height();
          st_destination = st_now + target_comment_box_top - 10;
          current_ask_container.scroll_to(st_destination);
        }
      }, 500);
    }

    function bubble_init(comment_type, comment_id) {
      var target_comment_lists, target_comment_boxes, is_left, is_reply;
      current_comment_lists.find(".comment_box:hidden").show();
      is_writing_box.remove();
      if (comment_type == "new") {
        is_left = Boolean(current_comment_input_menu.attr("left"));
        target_comment_lists = is_left ? current_comment_lists.not(".right") : current_comment_lists.not(".left");
        target_comment_lists.append(commentWritingSignTemplate({label: "작성중", is_left: is_left, is_reply: false}));
      } else if (comment_type == "edit") {
        target_comment_boxes = current_comment_lists.find(".comment_box."+comment_id);
        is_left = target_comment_boxes.hasClass("left");
        is_reply = target_comment_boxes.hasClass("reply");
        target_comment_boxes.hide();
        target_comment_boxes.after(commentWritingSignTemplate({label: "수정중", is_left: is_left, is_reply: is_reply}));
      } else if (comment_type == "reply") {
        target_comment_boxes = current_comment_lists.find(".comment_box."+comment_id);
        is_left = target_comment_boxes.hasClass("left");
        while (true) {
          if (target_comment_boxes.last().next().length > 0 && target_comment_boxes.last().next().hasClass("reply")) {
            target_comment_boxes = target_comment_boxes.next();
          } else {
            break;
          }
        }
        target_comment_boxes.after(commentWritingSignTemplate({label: "답글 작성중", is_left: is_left, is_reply: true}));
      }
    }

    function toggle_init(comment_type, comment_id) {
      if (comment_type == "edit" || comment_type == "reply") {
        var toggle_btn_is_left = Boolean(current_comment_input_menu.attr("left"));
        var target_comment_boxes = current_comment_lists.find(".comment_box."+comment_id);
        var original_comment_is_left = target_comment_boxes.hasClass("left");
        if (toggle_btn_is_left != original_comment_is_left) toggle_comment(current_comment_input_menu);
      }
    }

    function send_init(comment_type, comment_id) {
      if (comment_type == "new") {
        current_comment_input_submit_btn_text.html("전송");
      } else if (comment_type == "edit") {
        current_comment_input_submit_btn_text.html("수정");
      } else if (comment_type == "reply") {
        current_comment_input_submit_btn_text.html("답글");
      }
      current_comment_input_submit.off("click")
                                  .on("click", function(){
                                    send_comment(comment_type, comment_id);
                                  });

      function send_comment(comment_type, comment_id) {
        var content = current_comment_input.val().replace(/\s*$/, ""); // 뒤 공백문자 제거
        var is_left = Boolean(current_comment_input_menu.attr("left"));

        var is_writing_box = current_wrapper.find(".comment_box.is_writing");

        var all_ask_divs = $("#main_view").find(".ask.ask_"+ask_id);
        var all_ask_comment_count_spans = all_ask_divs.find(".ask_comment_count");
        var all_ask_comment_divs = $("#main_view").find(".comment.ask_"+ask_id);
        var all_ask_comment_lists = is_left ? all_ask_comment_divs.find(".comment_list").not(".right") : all_ask_comment_divs.find(".comment_list").not(".left");

        visitor_check(function(){
          if (content === "" || content === null) {
            notify('의견을 입력해주세요');
          } else if (content.length > 250) {
            notify('250자 이상은 입력이 불가능합니다');
          } else {
            $.ajax({
              url: comment_type == "edit" ? "/comments/"+comment_id+".json" : "/comments.json",
              dataType: "json",
              type: comment_type == "edit" ? "PUT" : "POST",
              data: {content: content, ask_id: ask_id, is_left: is_left, comment_id: comment_id},
              // async: false,  // 코멘트 중복 전송을 방지
              error: function() {
                notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
              },
              success: function(data) {
                if (data.status == "success") {
                  current_comment_input_init.attr("onclick", "new_comment();");
                  current_comment_input.val("").blur();
                  current_comment_input_submit.removeClass("ready").off("click");
                  current_comment_input_submit_btn_text.html("전송");
                  if (ask_comment_count === 0) all_ask_comment_lists.find(".comment_blank").animateCssHide("fadeOut");
                  if (comment_type == "edit") {
                    current_comment_lists.find(".comment_box."+comment_id).remove();
                  } else {
                    ask_comment_count += 1;
                    all_ask_comment_count_spans.html(ask_comment_count);
                  }
                  is_writing_box.replaceWith(commentTemplate({ask: data.ask, comment: data.comment, already_like: false}));

                  // 첨부 이미지 관련
                }
              },
              beforeSend: function() {
                loadingStart();
              },
              complete: function() {
                loadingEnd();
              }
            });
          }
        });
      }
    }

    function input_init(comment_type, comment_id) {
      var keyPressed = [];
      var hashtag_container = current_comment_container.find(".hashtag_container");
      var hashtag_highlights = current_comment_container.find(".hashtag_highlights");
      var hashtag_backdrop = current_comment_container.find(".hashtag_backdrop");
      current_comment_input.off("keydown keyup input scroll focus blur")
                           .on("keydown", function(e) {
                             keyPressed[e.keyCode] = true;
                             if (keyPressed[13] && (keyPressed[17] || keyPressed[91])) {
                               e.preventDefault();
                               current_comment_input_submit.click();
                             }
                           })
                           .on("keyup", function(e) {
                             keyPressed[e.keyCode] = false;
                             if ($(this).val().length === 0) { current_comment_input_submit.removeClass("ready"); } else { current_comment_input_submit.addClass("ready"); }
                             keyPressed = [];
                           })
                           .on("input", function(e) {
                             if (this.scrollHeight < $(window).height() / 2) {
                               $(this).css({height: "auto", overflowY: "hidden"}).height(this.scrollHeight);
                             } else {
                               $(this).css({height: "auto", overflowY: "scroll"}).height(this.scrollHeight);
                             }
                             current_comment_container.height(this.scrollHeight + 32);
                             hashtagInput($(this));
                             var comment_input_count = $(this).val().length;
                             current_comment_input_counter.html(comment_input_count);
                             if (comment_input_count > 200) {
                               if (comment_input_count > 250) { current_comment_input_counter.addClass("over"); } else { current_comment_input_counter.removeClass("over"); }
                               current_comment_input_counter.addClass("on");
                             } else {
                               current_comment_input_counter.removeClass("on");
                             }
                           })
                           .on("scroll", function(e) {
                             $(this).css({overflowY: "scroll"});
                             hashtagScroll($(this));
                           })
                           .on("focus", function(e) {
                             removeIOSKeyPadEffectOnFocus(e);
                             current_comment_lists.css({paddingBottom: "150px"});
                             if ($(this).height() == (50 - 32)) $(this).selectRange($(this).val().length, $(this).val().length);
                             $(this).height(this.scrollHeight);
                             current_comment_container.height(this.scrollHeight + 32);
                             if ($(this).val().length > 250) current_comment_input_counter.addClass("over");
                             $(this).removeClass("filled");
                             hashtagInput($(this));
                           })
                           .on("blur", function(e) {
                             removeIOSKeyPadEffectOnBlur(e);
                             current_comment_lists.css({paddingBottom: "10px"});
                             $(this).height(50 - 32);
                             current_comment_container.height(50);
                             if ($(this).val().length > 250) current_comment_input_counter.removeClass("over");
                             if ($(this).val().length === 0) {
                               hashtag_highlights.html("");
                               $(this).removeClass("filled");
                             } else {
                               $(this).addClass("filled");
                             }
                             $(this).attr("disabled",true);
                           }).attr("disabled",false).focus();

      function hashtagInput(target) {
        var text = target.val();
        var highlightedText = applyHashtag(text);
        hashtag_highlights.html(highlightedText);
      }

      function hashtagScroll(target) {
        var scrollTop = target.scrollTop();
        var scrollLeft = target.scrollLeft();
        hashtag_backdrop.scrollTop(scrollTop);
        hashtag_backdrop.scrollLeft(scrollLeft);
      }
    }

  }  // end of comment_input_activate()



  // function open_new_comment_menu(target) {
  //   var ask_wrapper = target.parentsUntil(this, ".wrapper");
  //   var comment_container = ask_wrapper.find(".container.bottom");
  //   var comment_input = comment_container.find(".comment_input");
  //
  //   var is_left = Boolean(target.attr("left"));
  //
  //   var options = {
  //                   menus: [
  //                     {
  //                       name: is_left ? "오른쪽에 댓글 달기" : "왼쪽에 댓글 달기",
  //                       func: "history.back(); toggle_comment();"
  //                     },
  //                     {
  //                       name: "이미지 첨부하기",
  //                       func: "history.back(); attach_comment_image();"
  //                     }
  //                   ]
  //                 };
  //   go_url('menu', options);
  // };
  //
  // function attach_comment_image() {
  //   notify('이미지 첨부 - 준비중');
  //   history.back();
  // };
  //
  function toggle_comment(target) {
    var is_left = Boolean(target.attr("left"));
    var current_wrapper = target.parentsUntil(this, ".wrapper");
    var current_comment_lists = current_wrapper.find(".comment_list");
    var target_comment_lists = is_left ? current_comment_lists.not(".right") : current_comment_lists.not(".left");
    var is_writing_box = target_comment_lists.find(".comment_box.is_writing");
    var is_writing = is_writing_box.length > 0;
    var is_writing_direction_left = is_writing_box.hasClass("left");
    var is_reply = is_writing_box.hasClass("reply");

    if (is_left) {
      target.removeAttr("left").removeClass("left").addClass("right");
      if (is_writing && is_writing_direction_left && !is_reply) is_writing_box.removeClass("left").addClass("right");
    } else {
      target.attr("left", true).removeClass("right").addClass("left");
      if (is_writing && !is_writing_direction_left && !is_reply) is_writing_box.removeClass("right").addClass("left");
    }
  }

  function open_comment_menu(target) {
    window.event.cancelBubble = true;
    var options;
    var is_deleted = Boolean(target.attr("is-deleted"));

    visitor_check(function() {
      if (is_deleted) {
        notify('삭제된 댓글입니다');
      } else {
        var comment_id = target.attr("comment-id");
        var original_comment_id = target.attr("original-comment-id");
        var comment_user_id = target.attr("comment-user-id");
        var comment_user_string_id = target.find(".comment_user_id").text();
        var comment_content = target.find(".comment_content").text();
        var already_like = target.find(".comment_like_icon").hasClass("fa-heart");
        if (comment_user_id == current_user.id) {
          options = {
                      description: "<b>"+comment_user_string_id+"님의 댓글</b><br>"+comment_content,
                      menus: [
                        {
                          name: "대댓글 달기",
                          func: "reply_comment("+original_comment_id+");"
                        },
                        {
                          name: "댓글 수정",
                          func: "edit_comment("+comment_id+");"
                        },
                        {
                          name: "댓글 삭제",
                          func: "delete_comment("+comment_id+");"
                        }
                      ]
                    };
        } else {
          options = {
                      description: "<b>"+comment_user_string_id+"님의 댓글</b><br>"+comment_content,
                      menus: [
                        {
                          name: already_like ? "좋아요 취소" : "좋아요",
                          func: "like_comment("+comment_id+");"
                        },
                        {
                          name: "대댓글 달기",
                          func: "reply_comment("+original_comment_id+");"
                        },
                        {
                          name: "신고하기",
                          func: "history.back(); report_content('comment', "+comment_id+");"
                        }
                      ]
                    };
        }
        go_url('menu', options);
      }
    });
  }

  function like_comment(comment_id) {
    var all_comment_boxes = $("#main_view").find(".comment_box."+comment_id);
    var all_comment_like_icons = all_comment_boxes.find(".comment_like_icon");
    var all_comment_like_counts = all_comment_boxes.find(".comment_like_count");
    var all_comment_likes = all_comment_boxes.find(".comment_likes");

    $.ajax({
		        url: "/comments/"+comment_id+"/like.json",
		        type: 'POST',
		        dataType: 'json',
		        error: function() {
		          notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
		        },
		        success: function(data) {
		        	if (data.already_like) {
                all_comment_like_icons.removeClass("fa-heart").addClass("fa-heart-o").animateCss("jello");
		        	} else {
                all_comment_like_icons.removeClass("fa-heart-o").addClass("fa-heart").animateCss("tada");
		        	}
              if (data.comment_like_count === 0) { all_comment_like_counts.html(""); } else { all_comment_like_counts.html("1"); }
              all_comment_likes.html(commentLikeTemplate({recent_user: data.recent_user, comment_like_count: data.comment_like_count}));
		        },
		        beforeSend: function(){
              history.back();
		        },
		        complete: function(){
		        }
			});
  }

  function delete_comment(comment_id) {
    history.back();
    var options = {
                description: "정말로 삭제하시겠어요?",
                menus: [
                  {
                    name: "댓글 삭제",
                    func: "delete_comment_confirmed(" + comment_id + ");",
                    class: "confirmation"
                  }
                ]
              };
    setTimeout(function(){
      go_url('menu', options);
    }, 50);
  }

  function delete_comment_confirmed(comment_id) {
    var all_comment_boxes = $("#main_view").find(".comment_box."+comment_id);
    var current_wrapper = $("#main_view").find(".seg.on").find(".wrapper").last();
    var current_ask_container = current_wrapper.find(".container.main");
    var ask_box = current_ask_container.find(".ask");
    var ask_id = Number(ask_box.attr("ask-id"));
    var all_ask_divs = $("#main_view").find(".ask.ask_"+ask_id);
    var all_ask_comment_count_spans = all_ask_divs.find(".ask_comment_count");
    var all_ask_comment_divs = $("#main_view").find(".comment.ask_"+ask_id);
    var all_ask_comment_lists = all_ask_comment_divs.find(".comment_list");
    var ask_comment_count = parseInt(all_ask_comment_count_spans.last().html());
    $.ajax({
            url: "/comments/"+comment_id+".json",
            dataType: 'json',
            type: 'DELETE',
            error: function() {
              notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
            },
            success: function(data) {
              if (data.status == "success") {
                all_comment_boxes.animateCssRemove("bounceOutDown");
                ask_comment_count -= 1;
                all_ask_comment_count_spans.html(ask_comment_count);
                if (ask_comment_count === 0) all_ask_comment_lists.find(".comment_blank").show().animateCss("fadeIn");
              } else if (data.status == "reply_exist") {
                all_comment_boxes.addClass("deleted").attr("is-deleted", true);
                all_comment_boxes.find(".comment_content").html("삭제된 댓글입니다");
                ask_comment_count -= 1;
                all_ask_comment_count_spans.html(ask_comment_count);
                if (ask_comment_count === 0) all_ask_comment_lists.find(".comment_blank").show().animateCss("fadeIn");
              } else if (data.status == "not_authorized") {
                notify('권한이 없습니다');
              }
            },
            beforeSend: function(){
              history.back();
		        }
    });
  }

</script>
