<script type="text/template" id="askDetailTemplate">
  {{ var is_liked_ask = false }}
  {{ if (current_user) { }}
    {{ is_liked_ask = $.grep(ask.ask_likes, function(obj) { return obj.user_id === current_user.id}).length === 0 ? false : true }}
  {{ } }}
  <div class="container top ask ask_detail ask_{{= ask.id }}" ontouchmove="return false;">
    <span class="header_title right" onclick="$(this).scroll_to();">{{= (current_user && ask.user_id == current_user.id) ? '나' : ask.user.string_id + "님" }}의 질문</span>
    <span class="header_btn left close_btn" onclick="back_button();">&times;</span>
    <span class="header_btn right" onclick="go_url('share', 'ask, {{= ask.id }}');"><i class="vaskit_icon share_icon"></i></span>
    {{ if (current_user && current_user.id == ask.user_id) { }}
      {{ if (!ask.be_completed) { }}
        <span class="header_btn right ask_edit_btn" onclick="go_url('ask_form', {{= ask.id }});"><i class="fa fa-edit"></i></span>
      {{ } }}
    {{ } else { }}
      <span class="header_btn right ask_like_btn" onclick="like_ask({{= ask.id }});"><i class="vaskit_icon {{= is_liked_ask ? 'is_liked' : '' }} ask_like_icon"></i></span>
    {{ } }}
  </div>
  <div class="container main full" ontouchstart="removeIOSRubberEffect($(this));">
    {{= askDetailBodyTemplate({ ask: ask }) }}
    {{= commentListTemplate({ ask: ask }) }}
  </div>
  {{= commentInputTemplate({ ask: ask }) }}
  {{= askImgViewTemplate({ ask: ask }) }}
</script>

<script type="text/template" id="askDetailBodyTemplate">
  {{ var is_voted = false }}
  {{ var vote_id = '' }}
  {{ var vote_direction = '' }}
  {{ var is_liked_ask = false }}
  {{ if (current_user) { }}
    {{ is_liked_ask = $.grep(ask.ask_likes, function(obj) { return obj.user_id === current_user.id}).length === 0 ? false : true }}
  {{ } }}
  {{ if (current_user && current_user.id == ask.user_id) { }}
    {{ is_voted = true }}
    {{ vote_id = '' }}
    {{ vote_direction = '' }}
  {{ } else if (current_user) { }}
    {{ var my_vote = $.grep(ask.votes, function(obj) { return (obj.user_id == current_user.id) })[0] }}
    {{ if (my_vote !== undefined) { }}
      {{ vote_id = my_vote.id }}
      {{ is_voted = true }}
      {{ vote_direction = ask.left_ask_deal_id == my_vote.ask_deal_id ? 'left' : 'right' }}
    {{ } }}
  {{ } else { }}
    {{ var my_votes = [] }}
    {{ var visitor_votes = $.cookie('visitor_votes') }}
    {{ var votes_array = (visitor_votes == null || visitor_votes == '') ? [] : visitor_votes.split('.') }}
    {{ for (var i=0; i < votes_array.length; i++) { }}
      {{ var vote = votes_array[i] }}
      {{ vote = JSON.parse(vote) }}
      {{ my_votes.push(vote) }}
    {{ } }}
    {{ var my_vote = $.grep(my_votes, function(obj) { return (obj.ask_id == ask.id) })[0] }}
    {{ if (my_vote !== undefined) { }}
      {{ vote_id = my_vote.id }}
      {{ is_voted = true }}
      {{ vote_direction = my_vote.is_left ? 'left' : 'right' }}
    {{ } }}
  {{ } }}
  {{ var left_count = ask.left_ask_deal.vote_count }}
  {{ var right_count = ask.right_ask_deal.vote_count }}
  {{ var total_count = left_count + right_count }}
  <div class="ask ask_detail ask_{{= ask.id }} {{= is_voted ? 'is_voted' : '' }} {{= vote_direction }}" ask-id="{{= ask.id }}" ask-user-id="{{= ask.user_id }}">
    <div class="clearfix">
      <div class="ask_image_box clearfix">
        <i class="fa fa-angle-left ask_image_background"></i>
        <span class="ask_image_background cancel">&times;</span>
        <i class="fa fa-angle-right ask_image_background"></i>
        <img class="ask_image left" src="{{= get_image_url(ask.left_ask_deal, 'ask_deals', 'normal') }}" onerror="imgError(this);" onclick="go_url('ask_image', $(this));">
        <img class="ask_image right" src="{{= get_image_url(ask.right_ask_deal, 'ask_deals', 'normal') }}" onerror="imgError(this);" onclick="go_url('ask_image', $(this));">
        {{ if (current_user && current_user.id == ask.user_id) { }}
          {{ var left_ratio = total_count == 0 ? '0' : (left_count / ( left_count + right_count ) * 100).toFixed() }}
          {{ var right_ratio = total_count == 0 ? '0' : (right_count / ( left_count + right_count ) * 100).toFixed() }}
          {{ if (!ask.be_completed && total_count == 0) { }}
            <span class="my_ask_vote_count blank"><small>이제 곧 투표가 시작됩니다 😬</small></span>
          {{ } else if (!ask.be_completed) { }}
            <span class="my_ask_vote_count left">{{= left_ratio }}<small>%</small></span>
            <span class="my_ask_vote_count right">{{= right_ratio }}<small>%</small></span>
          {{ } else { }}
            {{ var is_select_left = ask.ask_complete.ask_deal_id == ask.left_ask_deal_id }}
            {{ var is_select_right = ask.ask_complete.ask_deal_id == ask.right_ask_deal_id }}
            {{ left_count = ask.ask_complete.left_vote_count }}
            {{ right_count = ask.ask_complete.right_vote_count }}
            {{ total_count = left_count + right_count }}
            {{ left_ratio = total_count == 0 ? '0' : (left_count / ( left_count + right_count ) * 100).toFixed() }}
            {{ right_ratio = total_count == 0 ? '0' : (right_count / ( left_count + right_count ) * 100).toFixed() }}
            {{ var star_point = '' }}
            {{ if (ask.ask_complete.star_point === null) { }}
              {{ star_point = '-' }}
            {{ } else { }}
              {{ for (var i=0; i < ask.ask_complete.star_point; i++) { }}
                {{ star_point += '&#xf005;' }}
              {{ } }}
              {{ for (var j=0; j < 5-ask.ask_complete.star_point; j++) { }}
                {{ star_point += '&#xf006;' }}
              {{ } }}
            {{ } }}
            <span class="my_ask_vote_count left {{= is_select_left ? 'on' : '' }}" star="{{= star_point }}">{{= left_ratio }}<small>%</small></span>
            <span class="my_ask_vote_count right {{= is_select_right ? 'on' : '' }}" star="{{= star_point }}">{{= right_ratio }}<small>%</small></span>
          {{ } }}
          <div class="ask_completed {{= ask.be_completed ? 'on' : '' }}">종료한 투표입니다</div>
        {{ } }}
      </div>
      {{ if (current_user == null || current_user.id != ask.user_id) { }}
        <div class="vs_btn {{= is_voted ? '' : 'animated rubberBand' }}" onanimationstart="vs_init($(this));" onmouseover="vs_init($(this));" onanimationend="$(this).removeClass('animated rubberBand');" vote-id="{{= vote_id }}" vote-direction="{{= vote_direction }}">vs</div>
      {{ } }}
    </div>
    <div class="clearfix">
      {{= askDealsTableTemplate({ ask: ask, left_ask_deal: ask.left_ask_deal, right_ask_deal: ask.right_ask_deal }) }}
    </div>
    <div class="vs_result">
      {{= askResultTemplate({ type: "전체", left_count: left_count, right_count: right_count, total_count: total_count }) }}
    </div>
    <div class="vs_result_detail">
      <div>
        <div>{{= askResultTemplate({ type: '남성', left_count: 0, right_count: 0, total_count: 0 }) }}</div>
        <div>{{= askResultTemplate({ type: '여성', left_count: 0, right_count: 0, total_count: 0 }) }}</div>
      </div>
    </div>
    <div class="vs_result_detail_btn" onclick="toggle_vote_detail($(this));">
      <span>투표결과 상세보기 <i class="fa fa-caret-down"></i></span>
      <span>불러오는중... <i class="fa fa-spinner fa-spin"></i></span>
      <span>투표결과 상세닫기 <i class="fa fa-caret-up"></i></span>
    </div>
    <div class="ask_user">
      <img class="ask_user_pic" src="{{= get_avatar(ask.user) }}">
      {{ var gender = ask.user.gender ? 'male' : 'female' }}
      {{ if (ask.user.id == 1) { }}
        <span class="ask_user_id vaskit">VASKIT</span>
      {{ } else if (current_user && ask.user.id == current_user.id) { }}
        <span class="ask_user_id">{{= ask.user.string_id }}</span>
        <span class="ask_user_profile label me">ME</span>
      {{ } else { }}
        <span class="ask_user_id">{{= ask.user.string_id }}</span>
        <span class="ask_user_profile {{= gender }}">{{= get_user_ages(ask.user.birthday) }}</span>
      {{ } }}
      <div class="ask_count_span"><i class="vaskit_icon comment_icon"></i> <span class="ask_comment_count">{{= ask.left_ask_deal.comment_count + ask.right_ask_deal.comment_count }}</span></div>
      <div class="ask_count_span"><i class="vaskit_icon {{= is_liked_ask ? 'is_liked' : '' }} ask_like_icon"></i> <span class="ask_like_count">{{= ask.like_count }}</span></div>
    </div>
    <div class="ask_message">
      {{= ask.message.length > 0 ? taggingKeywords(ask.message, true) : '도와주세요!' }}
    </div>
    <div class="ask_like_span">
      {{ if (ask.ask_likes && ask.ask_likes.length > 0) { }}
        {{= askLikeTemplate({ recent_user: ask.ask_likes[ask.ask_likes.length-1].user, ask_like_count: ask.ask_likes.length }) }}
      {{ } }}
    </div>
    <div class="ask_message_menu">
      <span class="ask_created_at">{{= get_past_time(ask.created_at) }}</span>
      {{ if (current_user && current_user.id == ask.user.id) { }}
        {{ if (ask.be_completed) { }}
          종료한 투표입니다
        {{ } else { }}
          <i class="fa fa-navicon" onclick="$(this).addClass('fa-rotate-90'); $(this).next().addClass('on');"></i>
          <div class="ask_menu_btn" onclick="$(this).prev().removeClass('fa-rotate-90'); $(this).removeClass('on');">
            <span onclick="go_url('ask_form', {{= ask.id }});">질문 수정</span>
            &middot;
            {{ var ask_to_be_completed = { ask_id: ask.id, left_ask_deal_id: ask.left_ask_deal_id, right_ask_deal_id: ask.right_ask_deal_id, left_ask_deal_img_src: get_image_url(ask.left_ask_deal, 'ask_deals', 'normal'), right_ask_deal_img_src: get_image_url(ask.right_ask_deal, 'ask_deals', 'normal') } }}
            <span onclick="show_ask_complete('{{= escape(JSON.stringify(ask_to_be_completed)) }}');">질문 종료</span>
          </div>
        {{ } }}
      {{ } else { }}
          <i class="fa fa-navicon" onclick="$(this).addClass('fa-rotate-90'); $(this).next().addClass('on');"></i>
          <div class="ask_menu_btn" onclick="$(this).prev().removeClass('fa-rotate-90'); $(this).removeClass('on');">
            <span class="ask_like_btn" onclick="like_ask({{= ask.id }});">공감해요</span>
            &middot;
            <span onclick="report_content('ask', {{= ask.id }});">신고하기</span>
          </div>
      {{ } }}
    </div>
  </div>
</script>

<script type="text/template" id="askDealsTableTemplate">
  {{ if ((left_ask_deal.title != '' && left_ask_deal.title != null) || (right_ask_deal.title != '' && right_ask_deal.title != null)) { }}
  <div class="ask_table_row title">
    <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(left_ask_deal.title) }}</span>
    <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(right_ask_deal.title) }}</span>
    <i class="ask_table_icon vaskit_icon title"></i>
  </div>
  {{ } }}
  {{ if ((left_ask_deal.brand != '' && left_ask_deal.brand != null) || (right_ask_deal.brand != '' && right_ask_deal.brand != null)) { }}
  <div class="ask_table_row brand">
    <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(left_ask_deal.brand) }}</span>
    <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(right_ask_deal.brand) }}</span>
    <i class="ask_table_icon vaskit_icon brand"></i>
  </div>
  {{ } }}
  {{ if (left_ask_deal.price != null && right_ask_deal.price != null) { }}
  <div class="ask_table_row price">
    <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(numberWithCommas(left_ask_deal.price)) }}원</span>
    <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(numberWithCommas(right_ask_deal.price)) }}원</span>
    <i class="ask_table_icon vaskit_icon price"></i>
  </div>
  {{ } }}
  {{ if ((left_ask_deal.link != '' && left_ask_deal.link != null) || (right_ask_deal.link != '' && right_ask_deal.link != null)) { }}
  <div class="ask_table_row link">
    {{ var aLink = document.createElement('a') }}
    {{ if (left_ask_deal.link != '' && left_ask_deal.link != null) { }}
      {{ aLink.href = left_ask_deal.link }}
      <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));"><a href="{{= aLink.href }}" target="_blank" onclick="window.event.cancelBubble = true;">{{= fieldWithBlank(aLink.host) }}</a></span>
    {{ } else { }}
      <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(aLink.host) }}</span>
    {{ } }}
    {{ var bLink = document.createElement('a') }}
    {{ if (right_ask_deal.link != '' && right_ask_deal.link != null) { }}
      {{ bLink.href = right_ask_deal.link }}
      <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));"><a href="{{= bLink.href }}" target="_blank" onclick="window.event.cancelBubble = true;">{{= fieldWithBlank(bLink.host) }}</a></span>
    {{ } else { }}
      <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(bLink.host) }}</span>
    {{ } }}
    <i class="ask_table_icon vaskit_icon link"></i>
  </div>
  {{ } }}
  {{ if (ask !== null) { }}
    {{ if (ask.spec1 != null && ask.spec1 != '') { }}
    <div class="ask_table_row spec">
      <span class="ask_table_cell center text_box_short">{{= fieldWithBlank(ask.spec1) }}</span>
      <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(left_ask_deal.spec1) }}</span>
      <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(right_ask_deal.spec1) }}</span>
      <i class="ask_table_icon vaskit_icon spec"></i>
    </div>
    {{ } }}
    {{ if (ask.spec2 != null && ask.spec2 != '') { }}
    <div class="ask_table_row spec">
      <span class="ask_table_cell center text_box_short">{{= fieldWithBlank(ask.spec2) }}</span>
      <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(left_ask_deal.spec2) }}</span>
      <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(right_ask_deal.spec2) }}</span>
      <i class="ask_table_icon vaskit_icon spec"></i>
    </div>
    {{ } }}
    {{ if (ask.spec3 != null && ask.spec3 != '') { }}
    <div class="ask_table_row spec">
      <span class="ask_table_cell center text_box_short">{{= fieldWithBlank(ask.spec3) }}</span>
      <span class="ask_table_cell left text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(left_ask_deal.spec3) }}</span>
      <span class="ask_table_cell right text_box_short" onclick="go_url('ask_image', $(this));">{{= fieldWithBlank(right_ask_deal.spec3) }}</span>
      <i class="ask_table_icon vaskit_icon spec"></i>
    </div>
    {{ } }}
  {{ } }}
</script>

<script type="text/template" id="askLikeTemplate">
  {{ if (recent_user !== null) { }}
    {{ var string_id }}
    {{ if (current_user && current_user.id === recent_user.id) { }}
      {{ string_id = '회원' }}
    {{ } else { }}
      {{ string_id = recent_user.string_id }}
    {{ } }}
    <div class="animated fadeInUp">
      {{ if (ask_like_count == 1) { }}
        <i class="fa fa-heart animated tada"></i> <span>{{= string_id }}님</span>이 이 질문에 공감합니다
      {{ } else { }}
        <i class="fa fa-heart animated tada"></i> <span>{{= string_id }}님 외 {{= ask_like_count - 1 }}명</span>이 이 질문에 공감합니다
      {{ } }}
    </div>
  {{ } }}
</script>

<script>
  var askDetailTemplate = _.template($('#askDetailTemplate').html());
  var askDetailBodyTemplate = _.template($('#askDetailBodyTemplate').html());
  var askDealsTableTemplate = _.template($('#askDealsTableTemplate').html());
  var askLikeTemplate = _.template($('#askLikeTemplate').html());

  function show_ask(ask_id) {
    var url = '/asks/' + ask_id;
    $.ajax({
      url: url,
      dataType: 'json',
      type: 'GET',
      error: function() {
        notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
      },
      success: function(data) {
        var html = askDetailTemplate({ ask: data.ask });
        create_wrapper(html, true);
        ga('send', 'event', '컨텐츠', '질문', ask_id, 1);
      },
      beforeSend: function() {
        loadingStart();
      },
      complete: function() {
        loadingEnd();
      }
    });
    return url;
  }

  function hide_ask() {
    remove_wrapper();
  }

  function like_ask(ask_id) {
    if (visitor_check()) {
      ga('send', 'event', '랜딩페이지', '랜딩페이지 진입', '비회원 공감해요 시도', 1);
    } else {
      var current_ask_divs = $('#main_view').find('.seg.on').find('.wrapper').last().find('.ask.ask_' + ask_id);
      var current_ask_like_icons = current_ask_divs.find('.ask_like_icon');
      var current_ask_like_texts = current_ask_divs.find('.ask_like_text');
      var current_ask_like_counts = current_ask_divs.find('.ask_like_count');

      var all_ask_divs = $('#main_view').find('.ask.ask_' + ask_id).not(current_ask_divs);
      var all_ask_like_icons = all_ask_divs.find('.ask_like_icon').not(current_ask_like_icons);
      var all_ask_like_texts = all_ask_divs.find('.ask_like_text').not(current_ask_like_texts);
      var all_ask_like_counts = all_ask_divs.find('.ask_like_count').not(current_ask_like_counts);

      var current_ask_like_spans = current_ask_divs.find('.ask_like_span');
      var all_ask_like_spans = all_ask_divs.find('.ask_like_span').not(current_ask_like_spans);

      $.ajax({
              url: '/asks/' + ask_id + '/like.json',
              type: 'POST',
              dataType: 'json',
              async: false,
              error: function() {
                notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
              },
              success: function(data) {
                if (data.already_like) {
                  current_ask_like_icons.removeClass('is_liked').animateCss('rubberBand');
                  current_ask_like_texts.removeClass('is_liked');
                  all_ask_like_icons.removeClass('is_liked');
                  all_ask_like_texts.removeClass('is_liked');
                } else {
                  current_ask_like_icons.addClass('is_liked').animateCss('tada');
                  current_ask_like_texts.addClass('is_liked');
                  all_ask_like_icons.addClass('is_liked');
                  all_ask_like_texts.addClass('is_liked');
                }
                current_ask_like_counts.html(data.ask_like_count);
                all_ask_like_counts.html(data.ask_like_count);
                if (data.ask_like_count === 0) {
                  current_ask_like_spans.animateCssEmpty('fadeOutDown');
                  all_ask_like_spans.empty();
                } else {
                  current_ask_like_spans.html(askLikeTemplate({ recent_user: data.recent_user, ask_like_count: data.ask_like_count }));
                  all_ask_like_spans.html(askLikeTemplate({ recent_user: data.recent_user, ask_like_count: data.ask_like_count }));
                }
              }
      });
    }
  }

  function toggle_vote_detail(target) {
    var ask_container = target.parentsUntil(this, '.container.main');
    var vs_result_detail = ask_container.find('.vs_result_detail');
    var vs_result_detail_btn = ask_container.find('.vs_result_detail_btn');

    var ask_box = ask_container.find('.ask');
    var ask_id = ask_box.attr('ask-id');
    var is_vote = ask_box.hasClass('is_voted');
    var transitionEnd = 'webkitTransitionEnd mozTransitionEnd MSTransitionEnd oTransitionEnd transitionend';

    if (!is_vote) {
      notify('먼저 투표에 참여해주세요!');
      ask_container.animate({ scrollTop: 0 }, 250);
      vs_result_detail_btn.removeClass('is_opened');
    } else {
      if (visitor_check()) {
        ga('send', 'event', '랜딩페이지', '랜딩페이지 진입', '비회원 상세보기 시도', 1);
      } else {
        if (vs_result_detail_btn.hasClass('is_opened')) {
          vs_result_detail.removeClass('is_opened');
          vs_result_detail_btn.removeClass('is_opened');
        } else {
          $.ajax({
                  url: '/asks/' + ask_id + '/show_detail.json',
                  dataType: 'json',
                  type: 'GET',
                  error: function() {
                    notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
                  },
                  success: function(data) {
                    var html = '';
                    var detail_vote_count = data.detail_vote_count;
                    var gender_total_count = detail_vote_count.left.male_count + detail_vote_count.right.male_count;
                        gender_total_count += detail_vote_count.left.female_count + detail_vote_count.right.female_count;
                    var age_total_count = detail_vote_count.left.age_20_1_count + detail_vote_count.right.age_20_1_count;
                        age_total_count += detail_vote_count.left.age_20_2_count + detail_vote_count.right.age_20_2_count;
                        age_total_count += detail_vote_count.left.age_20_3_count + detail_vote_count.right.age_20_3_count;
                        age_total_count += detail_vote_count.left.age_30_1_count + detail_vote_count.right.age_30_1_count;
                        age_total_count += detail_vote_count.left.age_30_2_count + detail_vote_count.right.age_30_2_count;
                        age_total_count += detail_vote_count.left.age_30_3_count + detail_vote_count.right.age_30_3_count;
                        age_total_count += detail_vote_count.left.etc_count + detail_vote_count.right.etc_count;

                    html += '<div>';
                    html += '<div>' + askResultTemplate({ type: '남성', left_count: detail_vote_count.left.male_count, right_count: detail_vote_count.right.male_count, total_count: gender_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '여성', left_count: detail_vote_count.left.female_count, right_count: detail_vote_count.right.female_count, total_count: gender_total_count }) + '</div>';
                    html += '</div>';
                    html += '<div>';
                    html += '<div>' + askResultTemplate({ type: '20초', left_count: detail_vote_count.left.age_20_1_count, right_count: detail_vote_count.right.age_20_1_count, total_count: age_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '20중', left_count: detail_vote_count.left.age_20_2_count, right_count: detail_vote_count.right.age_20_2_count, total_count: age_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '20후', left_count: detail_vote_count.left.age_20_3_count, right_count: detail_vote_count.right.age_20_3_count, total_count: age_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '30초', left_count: detail_vote_count.left.age_30_1_count, right_count: detail_vote_count.right.age_30_1_count, total_count: age_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '30중', left_count: detail_vote_count.left.age_30_2_count, right_count: detail_vote_count.right.age_30_2_count, total_count: age_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '30후', left_count: detail_vote_count.left.age_30_3_count, right_count: detail_vote_count.right.age_30_3_count, total_count: age_total_count }) + '</div>';
                    html += '<div>' + askResultTemplate({ type: '기타', left_count: detail_vote_count.left.etc_count, right_count: detail_vote_count.right.etc_count, total_count: age_total_count }) + '</div>';
                    html += '</div>';

                    vs_result_detail.html(html).addClass('is_loading').one(transitionEnd, function() {
                        vs_result_detail.addClass('is_opened').removeClass('is_loading');
                    });
                    vs_result_detail_btn.removeClass('is_loading').addClass('is_opened');
                  },
                  beforeSend: function() {
                    loadingStart();
                    vs_result_detail_btn.addClass('is_loading');
                  },
                  complete: function() {
                    loadingEnd();
                  }
          });
        }
      }
    }
  }

  function show_ask_complete(ask_to_be_completed) {
    ask_to_be_completed = JSON.parse(unescape(ask_to_be_completed));
    var options = {
                menus: [
                  {
                    description: '어떤 제품을 선택하셨나요?',
                    name: '<div><img src="' + ask_to_be_completed.left_ask_deal_img_src + '" ask-deal-id="' + ask_to_be_completed.left_ask_deal_id + '" direction="true"></div>' +
                          '<div><img src="' + ask_to_be_completed.right_ask_deal_img_src + '" ask-deal-id="' + ask_to_be_completed.right_ask_deal_id + '"></div>' +
                          '<span></span>',
                    id: 'ask_complete_ask_deal_select'
                  },
                  {
                    description: '이 질문이 당신의 선택에 얼마나 도움이 되었나요?',
                    name: '<ul>' +
                          '<li data-value="1"><i class="fa fa-star-o"></i></li>' +
                          '<li data-value="2"><i class="fa fa-star-o"></i></li>' +
                          '<li data-value="3"><i class="fa fa-star-o"></i></li>' +
                          '<li data-value="4"><i class="fa fa-star-o"></i></li>' +
                          '<li data-value="5"><i class="fa fa-star-o"></i></li>' +
                          '</ul>',
                    id: 'star_rating_wrap'
                  }
                ],
                bottoms: [
                  {
                    name: '질문 종료하기',
                    func: 'submit_ask_complete(' + ask_to_be_completed.ask_id + ');',
                    id: 'submit_ask_complete',
                    class: 'confirmation not_ready'
                  },
                  {
                    name: '<input type="text" id="ask_complete_ask_deal_id">',
                    class: 'hidden'
                  },
                  {
                    name: '<input type="text" id="ask_complete_star_point">',
                    class: 'hidden'
                  }
                ]
              };
    go_url('menu', options);

    $(function() {
  		// bind events
      $('#ask_complete_ask_deal_select img').each(function() {
        $(this).bind('click', select_ask_deal);
      });
  		$('#star_rating_wrap').each(function() {
  			$(this).bind('mousedown', starMouseDownListener);
  			$(this).bind('touchstart', starTouchStartListener);
  			$(this).bind('touchmove', starTouchMoveListener);
  			$(this).bind('touchend', starTouchEndListener);
  		});
  	});

    function select_ask_deal(){
      var ask_deal_id = $(this).attr('ask-deal-id');
      var direction = Boolean($(this).attr('direction'));
      var imgs = $('#ask_complete_ask_deal_select').find('img');
      var span = $('#ask_complete_ask_deal_select').find('span');
      if (direction) {
        span.removeClass('right').addClass('left');
      } else {
        span.removeClass('left').addClass('right');
      }
      imgs.removeClass('selected unselected');
      imgs.not($(this)).addClass('unselected');
      $(this).addClass('selected');
      $('#ask_complete_ask_deal_id').val(ask_deal_id);
      check_to_submit();
    }

  	function starMouseDownListener(e){
  		e.preventDefault();

  		starMouseTarget = $(e.currentTarget);
  		calculateStarRating(e.pageX);

  		// unbind and bind mouse events to prevent repeated binding
  		$(document).unbind('mousemove', starMouseMoveListener);
  		$(document).unbind('mouseup', starMouseUpListener);
  		$(document).bind('mousemove', starMouseMoveListener);
  		$(document).bind('mouseup', starMouseUpListener);
  		// unbind touch events
  		starMouseTarget.unbind('touchstart', starTouchStartListener);
  		starMouseTarget.unbind('touchmove', starTouchMoveListener);
  		starMouseTarget.unbind('touchend', starTouchEndListener);
  	}

  	function starMouseMoveListener(e){
  		e.preventDefault();

  		calculateStarRating(e.pageX);
  	}

  	function starMouseUpListener(e){
  		e.preventDefault();

  		calculateStarRating(e.pageX);
  		updateStarPoint();

  		// unbind mouse events
  		$(document).unbind('mousemove', starMouseMoveListener);
  		$(document).unbind('mouseup', starMouseUpListener);
  	}

  	function starTouchStartListener(e){
  		e.preventDefault();

  		starMouseTarget = $(e.currentTarget);
  		calculateStarRating(e.originalEvent.touches[0].clientX);

  		starMouseTarget.unbind('mousedown', starMouseDownListener);
  	}

  	function starTouchMoveListener(e){
  		e.preventDefault();
  		calculateStarRating(e.originalEvent.touches[0].clientX);
  	}

  	function starTouchEndListener(e){
  		e.preventDefault();
  		updateStarPoint();
  	}

  	function calculateStarRating(x){
  		var li;
  		var n = 0;
  		starMouseTarget.find('li').each(function(index) {
  			li = $(this);
  			if( li.offset().left > x ){
  				li.removeClass('on');// not selected
  				li.find('i').removeClass('fa-star').addClass('fa-star-o');
  			}else{
  				li.addClass('on');// selected
  				li.find('i').removeClass('fa-star-o').addClass('fa-star');
  				n = index + 1;
  			}
  		});
  		starMouseTarget.find('li').data('value', n);
  	}

  	function updateStarPoint(){
  		var star_point = $('#star_rating_wrap > ul > li').data('value');
      $('#ask_complete_star_point').val(star_point);
      check_to_submit();
  	}

    function check_to_submit() {
      var star_point = $('#ask_complete_star_point').val();
      var ask_deal_id = $('#ask_complete_ask_deal_id').val();
      if (ask_deal_id !== '' && star_point !== '' && star_point !== '0') {
        $('#submit_ask_complete').removeClass('not_ready');
      } else {
        $('#submit_ask_complete').addClass('not_ready');
      }
    }
  }

  function submit_ask_complete(ask_id) {
    var ask_deal_id = $('#ask_complete_ask_deal_id').val();
    var star_point = $('#ask_complete_star_point').val();
    if (ask_deal_id === '') {
      notify('선택하신 제품을 알려주세요');
    } else if (star_point === '' || star_point === '0') {
      notify('투표의 만족도를 알려주세요');
    } else {
      var all_ask_thumbnails = $('#main_view').find('.ask.ask_thumbnail.ask_' + ask_id);
      var all_ask_details = $('#main_view').find('.ask.ask_detail.ask_' + ask_id);
      $.ajax({
            url: '/asks/' + ask_id,
            dataType: 'json',
            type: 'DELETE',
            data: { ask_deal_id: ask_deal_id, star_point: star_point },
            error: function() {
              notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
            },
            success: function(data) {
              notify('질문이 종료되었습니다');
              all_ask_thumbnails.replaceWith(askThumbnailTemplate({ ask: data.ask }));
              all_ask_details.replaceWith(askDetailTemplate({ ask: data.ask }));
            },
            beforeSend: function() {
              loadingStart();
              history.back();
            },
            complete: function() {
              loadingEnd();
            }
      });
    }
  }
</script>
