<script type="text/template" id="userAlarmTemplate">
  {{ if (alarms.length == 0) { }}
    <div class="no_result" ontouchstart="removeIOSRubberEffect($(this));"><span class="align_middle">새로운 알림피드가 없습니다</span></div>
  {{ } else { }}
    <div id="alarm_list" class="alarm_list" ontouchstart="removeIOSRubberEffect($(this));">
    {{ for (var i=0; i < alarms.length; i++) { }}
      {{ var alarm = alarms[i] }}
      {{ if (alarm.alarm_type.match('vote_')) { }}
				<a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.user) }}" alt="">
					<i class="fa fa-check-circle-o"></i>&nbsp;회원님의 질문에 <span class="alarm_highlight">{{= alarm.alarm_type.replace('vote_', '' ) }}명</span>이 투표했습니다. 중간점검 해보세요!
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
				</a>
			{{ } else if (alarm.alarm_type.match('like_ask_')) { }}
				{{ var ask_like_count = alarm.alarm_type.replace('like_ask_', '') }}
				<a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.send_user) }}" alt="">
					{{ if (ask_like_count == 1) { }}
						<i class="fa fa-heart-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님이 회원님의 질문에 공감합니다.
					{{ } else { }}
						<i class="fa fa-heart-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님 외 <span class="alarm_highlight">{{= ask_like_count - 1 }}명</span>이 회원님의 질문에 공감합니다.
					{{ } }}
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
				</a>
			{{ } else if (alarm.alarm_type.match('like_comment_')) { }}
				{{ var comment_like_count = alarm.alarm_type.replace('like_comment_', '') }}
				<a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.send_user) }}" alt="">
					{{ if (comment_like_count == 1) { }}
						<i class="fa fa-heart-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님이 회원님의 의견을 좋아합니다.
					{{ } else { }}
						<i class="fa fa-heart-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님 외 <span class="alarm_highlight">{{= comment_like_count - 1 }}명</span>이 회원님의 의견을 좋아합니다.
					{{ } }}
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
				</a>
			{{ } else if (alarm.alarm_type.match('reply_comment_')) { }}
				{{ var reply_comment_count = alarm.alarm_type.replace('reply_comment_', '') }}
				<a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.send_user) }}" alt="">
					{{ if (reply_comment_count == 1) { }}
						<i class="fa fa-comments-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님이 회원님의 의견에 댓글을 남겼습니다.
					{{ } else { }}
						<i class="fa fa-comments-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님 외 <span class="alarm_highlight">{{= reply_comment_count - 1 }}명</span>이 회원님의 의견에 댓글을 남겼습니다.
					{{ } }}
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
				</a>
			{{ } else if (alarm.alarm_type.match('reply_sub_comment_')) { }}
			  {{ var reply_sub_comment_count = alarm.alarm_type.replace('reply_sub_comment_', '') }}
			  <a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.send_user) }}" alt="">
				  {{ if (reply_sub_comment_count == 1) { }}
				    <i class="fa fa-comment-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님도 <span class="alarm_highlight">{{= alarm.comment_owner_user.string_id }}</span>님의 의견에 댓글을 남겼습니다.
				  {{ } else { }}
				    <i class="fa fa-comment-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님 외 <span class="alarm_highlight">{{= reply_sub_comment_count - 1 }}명</span>도 <span class="alarm_highlight">{{= alarm.comment_owner_user.string_id }}</span>님의 의견에 댓글을 남겼습니다.
				  {{ } }}
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
			  </a>
			{{ } else if (alarm.alarm_type.match('sub_comment_')) { }}
				{{ var sub_comment_count = alarm.alarm_type.replace('sub_comment_', '') }}
				<a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.send_user) }}" alt="">
					{{ if (sub_comment_count == 1) { }}
						<i class="fa fa-comment-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님도 <span class="alarm_highlight">{{= alarm.ask_owner_user.string_id }}</span>님의 질문에 의견을 남겼습니다.
					{{ } else { }}
						<i class="fa fa-comment-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님 외 <span class="alarm_highlight">{{= sub_comment_count - 1 }}명</span>도 <span class="alarm_highlight">{{= alarm.ask_owner_user.string_id }}</span>님의 질문에 의견을 남겼습니다.
					{{ } }}
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
				</a>
			{{ } else if (alarm.alarm_type.match('comment_')) { }}
				{{ var comment_count = alarm.alarm_type.replace('comment_', '') }}
				<a href="/asks/{{= alarm.ask_id }}" onclick="alarm_read($(this)); return false;" ask-id="{{= alarm.ask_id }}" class="clearfix alarm_item {{= alarm.is_read ? '' : 'new' }} alarm_ask_{{= alarm.ask_id }}">
          <img class="alarm_user_pic" src="{{= get_avatar(alarm.send_user) }}" alt="">
					{{ if (comment_count == 1) { }}
						<i class="fa fa-send-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님이 회원님의 질문에 의견을 남겼습니다.
					{{ } else { }}
						<i class="fa fa-send-o"></i>&nbsp;<span class="alarm_highlight">{{= alarm.send_user.string_id }}</span>님 외 <span class="alarm_highlight">{{= comment_count - 1 }}명</span>이 회원님의 질문에 의견을 남겼습니다.
					{{ } }}
					<div class="alarm_imgs">
						<img src="{{= get_image_url(alarm.ask.left_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
						<img src="{{= get_image_url(alarm.ask.right_ask_deal, 'ask_deals', 'normal') }}" class="alarm_img_thumbnail" onerror="imgError(this);">
					</div>
					<span class="alarm_past_time">{{= get_past_time(alarm.updated_at) }}</span>
				</a>
			{{ } }}
    {{ } }}
    </div>
    <div class="alarm_feed_title" ontouchmove="return false;">
      <i class="fa fa-caret-right"></i> 알림피드 <span id="alarm_feed_count" class="alarm_feed_count">{{= alarm_count == 0 ? '-' : alarm_count }}</span>
      <div id="alarm_read_all" class="alarm_read_all {{= alarm_count == 0 ? '' : 'on' }}">
        <span>다른 이들과 소통해보세요!</span><br>
        <span class="alarm_read_all_btn" onclick="alarm_read_all();"><i class="fa fa-check"></i> 모두 읽음으로 표시</span>
      </div>
    </div>
  {{ } }}
</script>

<script>
  var userAlarmTemplate = _.template($('#userAlarmTemplate').html());

  function user_alarms_on() {
    $.ajax({
		    url: '/users/get_user_alarms.json',
        dataType: 'json',
        type: 'GET',
        error: function() {
          notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
        },
		    success: function(data) {
          if (data.alarms === null) {
            $('#user_alarm').html('');
          } else {
            $('#user_alarm').html(userAlarmTemplate({ alarms: data.alarms, alarm_count: data.alarm_count }));
          }
        }
    });
  }

  function alarm_read(target) {
    var ask_id = Number(target.attr('ask-id'));
    var alarm_count = parseInt($('#alarm_feed_count').html());
    var all_alarm_items = $('#alarm_list').find('.alarm_ask_' + ask_id);
    var alarm_count_decrease = all_alarm_items.length;
    if (target.hasClass('new')) {
      if (alarm_count > alarm_count_decrease) {
        $('#alarm_feed_count').html(alarm_count - alarm_count_decrease);
      } else {
        $('#my_badge').removeClass('on');
        $('#alarm_read_all').removeClass('on');
        $('#alarm_feed_count').html('-');
      }
      all_alarm_items.removeClass('new');
    }
    ga('send', 'event', '마이탭', '알림 개별 확인', current_user.string_id, 1);
    go_url('ask', ask_id);
  }

  function alarm_read_all() {
    $.ajax({
            url: '/alarms.json',
            dataType: 'json',
            type: 'GET',
            error: function() {
              notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
            },
    		    success: function(data) {
              if (data.status == 'success') {
                $('#alarm_list').find('.alarm_item').removeClass('new');
                $('#my_badge').removeClass('on');
                $('#alarm_read_all').removeClass('on');
                $('#alarm_feed_count').html('-');
              }
            }
    });
    ga('send', 'event', '마이탭', '알림 전체 확인', current_user.string_id, 1);
  }
</script>
