<script type="text/template" id="searchTemplate">
  <div class="container top search_input_box" ontouchmove="return false;">
    <form action="" class="search_input_init" onclick="search_input_init($(this));">
      <input class="input text_field left right search_input" type="text" placeholder="검색어를 입력하세요" disabled>
      <span class="input btn_field left search_icon"><i class="fa fa-search"></i></span>
      <span class="input btn_field right search_input_submit"><i class="fa fa-search"></i></span>
      <span class="input btn_field text_btn right search_input_reset hidden"><i class="fa fa-times-circle"></i></span>
    </form>
  </div>
  <div class="container main has_inner search_result">
    <div id="search_preview_inner" class="inner" ontouchstart="removeIOSRubberEffect($(this));" index="-1">
      {{= searchPreviewListTemplate({ result: 'no_result' }) }}
    </div>
    <div id="recent_search_inner" class="inner" ontouchstart="removeIOSRubberEffect($(this));">
      <div id="popular_search_list">{{= searchPreviewListTemplate({ result: 'popular_search_list' }) }}</div>
      <div id="recent_search_list">{{= searchPreviewListTemplate({ result: 'recent_search_list' }) }}</div>
    </div>
  </div>
</script>

<script type="text/template" id="searchPreviewListTemplate">
  {{ if (result == 'blank') { }}
    <div class="no_result"><div class="align_middle">검색어를 입력해주세요</div></div>
  {{ } else if (result == 'no_result') { }}
    <div class="no_result"><div class="align_middle">일치하는 검색 결과가 없습니다</div></div>
  {{ } else if (result == 'popular_search_list') { }}
    <div class="search_preview_div">
      <div class="search_preview_title">
        <i class="fa fa-caret-right"></i> 인기 검색어
      </div>
      <ul id="search_keyword_seg" class="search_preview_list"></ul>
    </div>
  {{ } else if (result == 'recent_search_list') { }}
    <div class="search_preview_div">
      {{ var localStorageAvailable = check_localStorage() }}
      {{ var recent_search_list = $.cookie('recent_search_list') }}
      {{ if (localStorageAvailable) { }}
        {{ if (recent_search_list !== null) { }}
          {{ localStorage.setItem('recent_search_list', recent_search_list) }}
          {{ $.cookie('recent_search_list', null) }}
        {{ } }}
        {{ recent_search_list = localStorage.getItem('recent_search_list') }}
      {{ } }}
      {{ if (recent_search_list !== null) { }}
        <div class="search_preview_title">
          <i class="fa fa-caret-right"></i> 최근 검색어
          <span class="recent_search_reset" onclick="reset_recent_search();">&times; 삭제</span>
        </div>
        <ul class="search_preview_list">
          {{ recent_search_list = recent_search_list.split('.') }}
          {{ for (var i=recent_search_list.length; i > 0; i--) { }}
            {{ var search = JSON.parse(recent_search_list[i-1]) }}
            {{ var result_number = recent_search_list.length - i + 1 }}
            {{ var type = search.type }}
            {{ var keyword = search.keyword.replace(new RegExp(/[_][d][o][t][_]/g), '.') }}
            {{ var time = search.time }}
            {{= searchPreviewTemplate({ result: result, result_number: result_number, type: type, keyword: keyword, time: time }) }}
          {{ } }}
        </ul>
      {{ } }}
    </div>
  {{ } else if (result == 'preview_search_list') { }}
    <div class="search_preview_div">
      <ul class="search_preview_list">
        {{ $.each(data.collections, function(index, collection) { }}
          {{= searchPreviewTemplate({ result: result, type: 'collection', keyword: collection.name, time: null, id: collection.id }) }}</li>
        {{ }) }}
        {{ $.each(data.hash_tags, function(index, hash_tag) { }}
          {{= searchPreviewTemplate({ result: result, type: 'hash_tag', keyword: hash_tag.keyword, time: null }) }}</li>
        {{ }) }}
        {{ $.each(data.ask_deals, function(index, ask_deal) { }}
          {{= searchPreviewTemplate({ result: result, type: 'ask_deal', keyword: ask_deal.title, time: null }) }}</li>
        {{ }) }}
        {{ $.each(data.brands, function(index, brand) { }}
          {{= searchPreviewTemplate({ result: result, type: 'brand', keyword: brand.brand, time: null }) }}</li>
        {{ }) }}
        {{ $.each(data.users, function(index, user) { }}
          {{= searchPreviewTemplate({ result: result, type: 'user', keyword: user.string_id, time: null }) }}</li>
        {{ }) }}
      </ul>
    </div>
  {{ } }}
</script>

<script type="text/template" id="searchPreviewTemplate">
  {{ if (result == 'popular_search_list') { }}
    {{ var ga_function = "ga('send', 'event', '검색탭', '인기검색어 선택', '" + result_number + "번', 1); return false;" }}
  {{ } else if (result == 'recent_search_list') { }}
    {{ var ga_function = "ga('send', 'event', '검색탭', '최근검색어 선택', '" + result_number + "번', 1); return false;" }}
  {{ } else if (result == 'preview_search_list') { }}
    {{ var ga_function = "return false;" }}
  {{ } }}
  <li class="search_preview_item" onclick="{{= ga_function }}">
    {{ if (type == 'collection') { }}
      <a class="search_preview_link"
         href="{{= '/collections/' + id }}"
         onclick="ga('send', 'event', '검색탭', '검색 컬렉션 진입', {{= id }}, 1); go_url('collection', {{= id }}); window.event.cancelBubble = false;"
         time="{{= get_past_time(time) }}">
        <i class="search_preview_icon vaskit_icon {{= type }}_icon"></i>{{= unescape(keyword) }}
      </a>
    {{ } else { }}
      <a class="search_preview_link"
         href="{{= '/search?type=' + escape(type) + '&keyword=' + escape(keyword) }}"
         onclick="go_url('search_result', {type: '{{= type }}', keyword: '{{= escape(keyword) }}'}); window.event.cancelBubble = false;"
         time="{{= get_past_time(time) }}">
        <i class="search_preview_icon vaskit_icon {{= type }}_icon"></i>{{= unescape(keyword) }}
      </a>
    {{ } }}
  </li>
</script>

<script>
  var searchTemplate = _.template($('#searchTemplate').html());
  var searchPreviewListTemplate = _.template($('#searchPreviewListTemplate').html());
  var searchPreviewTemplate = _.template($('#searchPreviewTemplate').html());

  function set_search_keywords() {
    var search_keyword_seg = $('#search_keyword_seg');
    $.ajax({
      url: '/search?search_keywords=true',
      dataType: 'json',
      type: 'GET',
      error: function() {
        notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
      },
      success: function(data) {
        search_keyword_seg.html('');
        $.each(data.search_keywords, function(index, search_keyword) {
          search_keyword_seg.append(searchPreviewTemplate({ result: 'popular_search_list', result_number: index + 1, type: search_keyword.search_type, keyword: search_keyword.keyword, time: null }));
        });
      }
    });
  }

  function search_input_init(target) {
    var search_wrapper = $('#search');
    var recent_search_container = $('#recent_search_inner');
    var search_preview_container = $('#search_preview_inner');
    var search_input = target.find('.search_input');
    var search_input_submit = target.find('.search_input_submit');
    var search_input_reset = target.find('.search_input_reset');

    ga('send', 'event', '검색탭', '검색창 활성화', 1);
    search_input_submit.off('click').on('click', function() { search_by_key(); });
    search_input_reset.off('click').on('click', function() { search_keyword_reset(); });
    search_input
      .off('keydown keyup focus blur')
      .on('keydown', function(e) {
      	if (e.keyCode == '13') {
      		e.preventDefault();
          $(this).blur();
          search_by_key();
      	} else if (e.keyCode == '27') {
      		e.preventDefault();
      		search_keyword_reset();
      	} else if (e.keyCode == '40') {
      		e.preventDefault();
      		if ($(this).val().length > 0) navigate_by_key(true);
      	} else if (e.keyCode == '38') {
      		e.preventDefault();
      		if ($(this).val().length > 0) navigate_by_key(false);
      	}
      })
      .on('keyup', function(e) {
        var keyword = $(this).val();
        if (keyword.length === 0) {
          search_input_reset.addClass('hidden');
          search_input_submit.removeClass('ready');
          recent_search_container.removeClass('bottom');
          search_preview_container.html(searchPreviewListTemplate({ result: 'blank' }));
        } else {
          search_input_reset.removeClass('hidden');
          search_input_submit.addClass('ready');
          recent_search_container.addClass('bottom');
          var keys = [13, 27, 40, 39, 38, 37];
          if ($.inArray(e.keyCode, keys) == -1) _.throttle(preview_search_list($(this).val()), 500);
        }
      })
      .on('focus', function() {
        target.addClass('on');
        if (search_preview_container.find('.search_preview_item').length > 0) {
          recent_search_container.addClass('bottom');
        }
    	})
      .on('blur', function() {
        target.removeClass('on');
        if (search_preview_container.find('.search_preview_item').length === 0) {
          recent_search_container.removeClass('bottom');
        }
        $(this).attr('disabled', true);
      })
      .removeAttr('disabled').focus();

    function preview_search_list(keyword) {
      $.ajax({
        url: '/search/keyword',
        dataType: 'json',
        type: 'GET',
        data: { keyword: keyword },
        error: function() {
          return false;
        },
        success: function(data) {
          search_preview_container.attr('index', -1);
          search_preview_container.html('');
          if (data.is_empty_result) {
            search_preview_container.html(searchPreviewListTemplate({ result: 'no_result' }));
          } else {
            search_preview_container.html(searchPreviewListTemplate({ result: 'preview_search_list', data: data })).highlight(keyword);
            navigate_by_mouse();
          }
        }
      });
    }

    function search_by_key() {
      var keyword = search_input.val();
      var search_focus = search_preview_container.find('.search_preview_link.search_focus');
      if (keyword === '' || keyword === undefined) {
        notify('검색어를 입력해주세요');
        target.click();
      } else if ( search_focus.length == 1 ) {
        search_focus.click();
      } else {
        var search_options = { type: 'none', keyword: keyword };
        go_url('search_result', search_options);
      }
    }

    function search_keyword_reset() {
      recent_search_container.removeClass('bottom');
      search_preview_container.html(searchPreviewListTemplate({ result: 'blank' })).attr('index', -1);
      search_input_reset.addClass('hidden');
  		search_input.val('');
      target.click();
  	}

    function navigate_by_key(is_down) {
      var search_results = search_preview_container.find('.search_preview_link');
  		var search_result_length = search_results.length;
      var search_result_height = search_results.outerHeight();
  		var vp_height = search_preview_container.innerHeight();
      var search_focus_index, search_focus, focus_bottom, vp_top, focus_text;

  		if (is_down) {
        search_focus_index = Number(search_preview_container.attr('index'));
  			if (search_focus_index == search_result_length - 1) {
  				search_preview_container.attr('index', 0);
  				search_preview_container.scrollTop(0);
  			} else {
  				search_preview_container.attr('index', search_focus_index + 1);
  			}
        search_focus_index = Number(search_preview_container.attr('index'));
  			search_results.removeClass('search_focus');
  			search_results.eq(search_focus_index).addClass('search_focus');
        search_focus = search_preview_container.find('.search_preview_link.search_focus');
  			focus_bottom = search_result_height * (search_focus_index + 1);
  			vp_top = search_preview_container.scrollTop();
  			if (focus_bottom > vp_top + vp_height) {
  				search_preview_container.scrollTop(focus_bottom-vp_height);
  			}
  		} else {
        search_focus_index = Number(search_preview_container.attr('index'));
  			if (search_focus_index < 1) {
  				search_preview_container.attr('index', search_result_length - 1);
  				search_preview_container.scrollTop(search_result_height * search_result_length);
  			} else {
          search_preview_container.attr('index', search_focus_index - 1);
  			}
        search_focus_index = Number(search_preview_container.attr('index'));
  			search_results.removeClass('search_focus');
  			search_results.eq(search_focus_index).addClass('search_focus');
        search_focus = search_preview_container.find('.search_preview_link.search_focus');
  			focus_top = search_result_height * search_focus_index;
  			vp_top = search_preview_container.scrollTop();
  			if (focus_top < vp_top) {
  				search_preview_container.scrollTop(focus_top);
  			}
  		}

  		focus_text = search_focus.text().replace(/(^\s*)|(\s*$)/g, '');
  		search_input.val(focus_text);
  	}

    function navigate_by_mouse() {
      var search_results = search_preview_container.find('.search_preview_link');
      search_results.off('mouseover')
                    .on('mouseover', function() {
                      search_results.removeClass('search_focus');
                      $(this).addClass('search_focus');
                      search_preview_container.attr('index', $(this).index());
                      var focus_text = $(this).text().replace(/(^\s*)|(\s*$)/g, '');
                      search_input.val(focus_text);
                    });
    }
  }
</script>

<script type="text/template" id="searchResultTemplate">
  <div class="container top" ontouchmove="return false;">
    <span class="header_title" onclick="$(this).scroll_to();">
      <i class="search_preview_icon vaskit_icon {{= type }}_icon"></i>{{= unescape(keyword) }} 검색결과</span>
    <span class="header_btn left back_btn" onclick="back_button();"><i class="fa fa-angle-left"></i></span>
  </div>
  {{= asksListTemplate({ asks: asks, url: url }) }}
</script>

<script>
  var searchResultTemplate = _.template($('#searchResultTemplate').html());

  function show_search_result(search_options) {
    var type = unescape(search_options.type);
    var keyword = unescape(search_options.keyword);
    var url = '/search';
    $.ajax({
            url: url,
            dataType: 'json',
            type: 'GET',
            data: { type: type, keyword: keyword },
            error: function() {
              notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
            },
            success: function(data) {
              var html = searchResultTemplate({ type: type, keyword: keyword, asks: data.asks, url: url });
              create_wrapper(html);
              save_recent_search(type, keyword);
              $('#recent_search_list').html(searchPreviewListTemplate({ result: 'recent_search_list' }));
              $('#recent_search_inner').removeClass('bottom');
              ga('send', 'event', '검색탭', '검색 실행', type + '/' + keyword, 1);
            },
            beforeSend: function() {
              loadingStart();
            },
            complete: function() {
              loadingEnd();
            }
    });

    url = url + '?type=' + encodeURIComponent(type) + '&keyword=' + encodeURIComponent(keyword);
    return url;
  }

  function hide_search_result() {
    remove_wrapper();
  }

  function save_recent_search(type, keyword) {
    var localStorageAvailable = check_localStorage();
    var recent_search_list = localStorageAvailable ? localStorage.getItem('recent_search_list') : $.cookie('recent_search_list');
    var search_array = recent_search_list === null ? [] : recent_search_list.split('.');
    keyword = keyword.replace(new RegExp(/[.]/g), '_dot_');
    if (search_array.length >= 10) search_array = search_array.splice(search_array.length-9, search_array.length);
    for (var i=0; i<search_array.length; i++) {
      var search = search_array[i];
      search = JSON.parse(search);
      if (search.type == type && search.keyword == keyword) search_array.splice(i, 1);
    }
    var this_search = JSON.stringify({
      type: type,
      keyword: keyword,
      time: Date.now()
    });
    search_array.push(this_search);
    recent_search_list = search_array.join('.');
    if (localStorageAvailable) {
      localStorage.setItem('recent_search_list', recent_search_list);
    } else {
      $.cookie('recent_search_list', recent_search_list, { expires: 30000, path: '/' });
    }
  }

  function reset_recent_search() {
    if (check_localStorage()) {
      localStorage.removeItem('recent_search_list');
    } else {
      $.cookie('recent_search_list', null);
    }
    $('#recent_search_list').animateCssEmpty('fadeOutDownBig');
  }
</script>
