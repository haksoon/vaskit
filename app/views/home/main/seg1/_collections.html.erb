<script type="text/template" id="collectionTemplate">
  <a href="/collections/{{= collection.id }}" class="clearfix collection_thumbnail contents_box" onclick="go_url('collection', {{= collection.id }}); return false;">
    <div class="collection_title">
      <p class="collection_description">{{= collection.description }}</p>
      <p class="collection_name">{{= collection.name }}</p>
    </div>
    <img class="collection_image" src="{{= get_image_url(collection, 'collections', 'original') }}" alt="" onerror="imgError(this);">
  </a>
</script>

<script type="text/template" id="collectionShowTemplate">
  <div class="collection_detail" style="background-image: url('{{= get_image_url(collection, 'collections', 'original') }}');">
    <div class="collection_title">
      <p class="collection_description">{{= collection.description }}</p><br>
      <p class="collection_name">{{= collection.name }}</p>
    </div>
  </div>
  <div class="container top" ontouchmove="return false;">
    <span class="header_title" onclick="$(this).scroll_to();">컬렉션</span>
    <span class="header_btn left back_btn" onclick="back_button();"><i class="fa fa-angle-left"></i></span>
    <span class="header_btn right" onclick="go_url('share', 'collection, {{= collection.id }}');"><i class="vaskit_icon share_icon"></i></span>
  </div>
  <div class="container main" ontouchstart="removeIOSRubberEffect($(this));" onscroll="animate_collection_image($(this));">
    <div class="collection_blank"></div>
    <div class="clearfix">
      {{ for (var i=0; i < asks.length; i++) { }}
        {{ var ask = asks[i] }}
        {{= askThumbnailTemplate({ ask: ask }) }}
      {{ } }}
    </div>
    {{ if (related_collections.length > 0) { }}
      <div class="related_collections_title"><span class="title">추천 컬렉션</span> <span class="description">이건 어떻게 생각하시나요?</span></div>
      <div class="related_collections_list">
        <div class="clearfix contents_box bxslider">
          {{ for (var j=0; j < related_collections.length; j++) { }}
            {{ var related_collection = related_collections[j] }}
            {{= collectionTemplate({ collection: related_collection }) }}
          {{ } }}
        </div>
      </div>
    {{ } else { }}
      {{= recentAsksTemplate({ asks: recent_asks }) }}
    {{ } }}
  </div>
</script>

<script>
  var collectionTemplate = _.template($('#collectionTemplate').html());
  var collectionShowTemplate = _.template($('#collectionShowTemplate').html());

  function set_collections() {
    $.ajax({
            url: '/collections',
            dataType: 'json',
            type: 'GET',
            error: function() {
              notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
            },
            success: function(data) {
              var collections = data.collections;
              for (var i=0; i < collections.length; i++) {
                var collection = collections[i];
                $('#collections_seg').find('.loading_icon').before(collectionTemplate({ collection: collection }));
              }
            }
    });
  }

  function show_collection(collection_id) {
    var url = '/collections/' + collection_id;
    $.ajax({
            url: url,
            dataType: 'json',
            type: 'GET',
            data: { id: collection_id },
            error: function() {
              notify('<i class="fa fa-exclamation-triangle"></i> 네트워크 오류');
            },
            success: function(data) {
              var html = collectionShowTemplate({ collection: data.collection, asks: data.asks, related_collections: data.related_collections, recent_asks: data.recent_asks });
              var new_wrapper = create_wrapper(html);
              new_wrapper.find('.bxslider').bxSlider({
                controls: false
              });
              if (currentSeg === 1 && segHistory[currentSeg] === 1) ga('send', 'event', '컬렉션탭', '컬렉션', 1);
              ga('send', 'event', '컨텐츠', '컬렉션', collection_id, 1);
            },
            beforeSend: function() {
              loadingStart();
            },
            complete: function() {
              loadingEnd();
            }
    });
    return url;
  }

  function hide_collection() {
    remove_wrapper();
  }

  function animate_collection_image(target) {
    var current_wrapper = target.parentsUntil(this, '.wrapper');
    var img = current_wrapper.find('.collection_detail');
    var st = target.scrollTop();
    var vh = target.innerHeight();
    var scale = 1;
    if (st < 0) {
      scale = -(st / vh) * 2 + 1;
      img.clearQueue().css({ transformOrigin: 'top center', transform: 'scale(' + scale + ')' });
    } else {
      scale = (st / vh) * 1.2 + 1;
      img.clearQueue().css({ transformOrigin: 'bottom center', transform: 'scale(' + scale + ')' });
    }
  }
</script>
